from vkwave.bots.utils.keyboards import Keyboard

from database import utils


def main_menu(user_id: int) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Returns:
        JSON-like str: –°—Ç—Ä–æ–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π

    """
    is_admin = utils.is_user_admin(admin_id=utils.get_system_id_of_student(user_id))
    kb = Keyboard()
    if is_admin:
        kb.add_text_button(text="üì¢ –ü—Ä–∏–∑—ã–≤", payload={"button": "call"})
        kb.add_text_button(text="üí∞ –§–∏–Ω–∞–Ω—Å—ã", payload={"button": "finances"})
        kb.add_row()
    kb.add_text_button(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", payload={"button": "schedule"})
    kb.add_text_button(text="üì® –†–∞—Å—Å—ã–ª–∫–∏", payload={"button": "mailings"})
    if is_admin:
        kb.add_row()
        kb.add_text_button(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", payload={"button": "settings"})
        kb.add_text_button(text="üåê –í–µ–±", payload={"button": "web"})
    return kb.get_keyboard()


def skip_call_message():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–∑—ã–≤–∞
    Returns:
        JSON-like str: –°—Ç—Ä–æ–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    """
    kb = Keyboard()
    kb.add_text_button(text="üëâüèª –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", payload={"button": "skip_call_message"})

    kb.add_text_button(text="üö´ –û—Ç–º–µ–Ω–∞", payload={"button": "cancel_call"})
    return kb.get_keyboard()


def alphabet(user_id):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤ —Ñ–∞–º–∏–ª–∏–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Returns:
        Keyboard: –§—Ä–∞–≥–º–µ–Ω—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    kb = Keyboard()
    alphabet = utils.get_unique_second_name_letters_in_a_group(user_id)
    for letter in alphabet:
        if len(kb.buttons[-1]) == 4:
            kb.add_row()
        kb.add_text_button(text=letter, payload={"button": "letter", "value": letter})

    return kb


def call_interface(user_id: int):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–∑—ã–≤–∞–µ–º—ã—Ö

    Args:
        user_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        JSON-like str: –°—Ç—Ä–æ–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    """
    kb = alphabet(user_id)
    if len(kb.buttons[-1]):
        kb.add_row()
    kb.add_text_button(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", payload={"button": "save_selected"})
    kb.add_text_button(text="üë• –ü—Ä–∏–∑–≤–∞—Ç—å –≤—Å–µ—Ö", payload={"button": "call_all"})
    kb.add_row()
    kb.add_text_button(text="üö´ –û—Ç–º–µ–Ω–∞", payload={"button": "cancel_call"})

    return kb.get_keyboard()
